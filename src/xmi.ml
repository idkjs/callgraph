(******************************************************************************)
(*   Copyright (C) 2014-2015 THALES Communication & Security                  *)
(*   All Rights Reserved                                                      *)
(*   European IST STANCE project (2011-2015)                                  *)
(*   author: Hugues Balp                                                      *)
(*                                                                            *)
(******************************************************************************)

(* source: /media/hbalp/users_2/balp/tests/languages/ocaml/common.ml *)
(* XML related stuff used both by CCD and CDP files *)

let xml_header = "<?xml version=\"1.0\" encoding=\"utf-8\"?>"

(* let thales_xml_copyright = "<!--\n This file has been generated by the clang callers (R) plugin\n Copyright (C) THALES 2015. All rights reserved\n-->" *)

let author_xml_copyright = "<!--\n This file has been generated by the clang Callers(R) plugin\n Copyright (C) Hugues Balp 2015. All rights reserved\n-->"

let xml_copyright = author_xml_copyright

let add_childrens (element: Xml.xml) (childrens: Xml.xml list) : Xml.xml =

  match element with

  | Xml.PCData(_) -> raise Common.IncompatibleType

  | Xml.Element(name,attr,ch) ->
    (
      match ch with
      | []   -> Xml.Element(name, attr, childrens)
      | list -> Xml.Element(name, attr, List.append list childrens)
    )

let add_item (tag:string) (attributes:(string * string) list) (values: string list) : Xml.xml =

  let v =

    List.fold_left
      (
	fun acc va -> Xml.PCData(va) :: acc
      )
      []
      values
  in

  Xml.Element(tag, attributes, v)

let output_xml_file (filename:string) (file_content:Xml.xml) : unit =

  let outchan = open_out filename in

  Printf.fprintf outchan "%s\n%s\n%s\n"
    xml_header
    xml_copyright
    (Xml.to_string_fmt file_content);

  close_out outchan
;;

(* Local Variables: *)
(* mode: tuareg *)
(* End: *)
